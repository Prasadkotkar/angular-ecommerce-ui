{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/product.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ProductListComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 6);\n    i0.ɵɵelement(2, \"img\", 7);\n    i0.ɵɵelementStart(3, \"h1\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 8);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"a\", 9);\n    i0.ɵɵtext(8, \"Add to cart\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const tempProduct_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"src\", tempProduct_r1.imageUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵpropertyInterpolate(\"alt\", tempProduct_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tempProduct_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tempProduct_r1.unitPrice);\n  }\n}\nexport class ProductListComponent {\n  constructor(productService, route) {\n    this.productService = productService;\n    this.route = route;\n    this.products = [];\n    this.currentCategoryId = 1;\n    this.searchMode = false;\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(() => {\n      this.listProducts();\n    });\n  }\n  listProducts() {\n    this.searchMode = this.route.snapshot.paramMap.has('keyword');\n    if (this.searchMode) {\n      this.handleSearchProducts();\n    } else {\n      this.handleListProducts();\n    }\n  }\n  handleSearchProducts() {\n    const theKeyword = this.route.snapshot.paramMap.get('keyword');\n  }\n  handleListProducts() {\n    // check if \"id\" parameter is available\n    const hasCategoryId = this.route.snapshot.paramMap.has('id');\n    if (hasCategoryId) {\n      // get the 'id' parma string. convert string to a number using the \"+\" symbol\n      this.currentCategoryId = +this.route.snapshot.paramMap.get('id');\n    } else {\n      // not category id available ... default to category id 1\n      this.currentCategoryId = 1;\n    }\n    // get products for the given category id\n    this.productService.getProductList(this.currentCategoryId).subscribe(data => {\n      this.products = data;\n    });\n  }\n}\nProductListComponent.ɵfac = function ProductListComponent_Factory(t) {\n  return new (t || ProductListComponent)(i0.ɵɵdirectiveInject(i1.ProductService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nProductListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProductListComponent,\n  selectors: [[\"app-product-list\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"main-content\"], [1, \"section-content\", \"section-content-p30\"], [1, \"container-fluid\"], [1, \"row\"], [\"class\", \"col-md-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-3\"], [1, \"product-box\"], [1, \"img-responsive\", 3, \"src\", \"alt\"], [1, \"price\"], [\"href\", \"#\", 1, \"primary-btn\"]],\n  template: function ProductListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵtemplate(4, ProductListComponent_div_4_Template, 9, 4, \"div\", 4);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.products);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAKgBA,8BAA2D;IAGnDA,yBAA0F;IAC1FA,0BAAI;IAAAA,YAAsB;IAAAA,iBAAK;IAC/BA,8BAAmB;IAAAA,YAA2B;IAAAA,iBAAM;IACpDA,4BAAgC;IAAAA,2BAAW;IAAAA,iBAAI;;;;IAH1CA,eAAgC;IAAhCA,0EAAgC;IAAwBA,oDAA4B;IACrFA,eAAsB;IAAtBA,yCAAsB;IACPA,eAA2B;IAA3BA,8CAA2B;;;ACEtE,OAAM,MAAOC,oBAAoB;EAM7BC,YAAoBC,cAA8B,EAC9BC,KAAqB;IADrB,mBAAc,GAAdD,cAAc;IACd,UAAK,GAALC,KAAK;IALzB,aAAQ,GAAc,EAAE;IACxB,sBAAiB,GAAS,CAAC;IAC3B,eAAU,GAAY,KAAK;EAGiB;EAE5CC,QAAQ;IACN,IAAI,CAACD,KAAK,CAACE,QAAQ,CAACC,SAAS,CAAC,MAAK;MAC/B,IAAI,CAACC,YAAY,EAAE;IACvB,CAAC,CAAC;EAEJ;EACAA,YAAY;IACV,IAAI,CAACC,UAAU,GAAG,IAAI,CAACL,KAAK,CAACM,QAAQ,CAACJ,QAAQ,CAACK,GAAG,CAAC,SAAS,CAAE;IAE9D,IAAI,IAAI,CAACF,UAAU,EAAE;MACnB,IAAI,CAACG,oBAAoB,EAAE;KAC5B,MACI;MACH,IAAI,CAACC,kBAAkB,EAAE;;EAE7B;EACFD,oBAAoB;IAClB,MAAME,UAAU,GAAW,IAAI,CAACV,KAAK,CAACM,QAAQ,CAACJ,QAAQ,CAACS,GAAG,CAAC,SAAS,CAAC;EACxE;EAGEF,kBAAkB;IAChB;IACA,MAAMG,aAAa,GAAY,IAAI,CAACZ,KAAK,CAACM,QAAQ,CAACJ,QAAQ,CAACK,GAAG,CAAC,IAAI,CAAC;IAErE,IAAIK,aAAa,EAAE;MACjB;MACA,IAAI,CAACC,iBAAiB,GAAG,CAAC,IAAI,CAACb,KAAK,CAACM,QAAQ,CAACJ,QAAQ,CAACS,GAAG,CAAC,IAAI,CAAE;KAClE,MAAM;MACH;MACA,IAAI,CAACE,iBAAiB,GAAG,CAAC;;IAE9B;IACA,IAAI,CAACd,cAAc,CAACe,cAAc,CAAC,IAAI,CAACD,iBAAiB,CAAC,CAACV,SAAS,CAClEY,IAAI,IAAG;MACL,IAAI,CAACC,QAAQ,GAAGD,IAAI;IACtB,CAAC,CACF;EACH;;AA/CSlB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDZjCzB,8BAA0B;MAKVA,qEAQM;MACVA,iBAAM;;;MAT2BA,eAAW;MAAXA,sCAAW","names":["i0","ProductListComponent","constructor","productService","route","ngOnInit","paramMap","subscribe","listProducts","searchMode","snapshot","has","handleSearchProducts","handleListProducts","theKeyword","get","hasCategoryId","currentCategoryId","getProductList","data","products","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Project\\fullstack-angular-and-springboot\\Project files\\03-frontend\\angular-ecommerce-ui\\src\\app\\components\\product-list\\product-list-grid.component.html","D:\\Project\\fullstack-angular-and-springboot\\Project files\\03-frontend\\angular-ecommerce-ui\\src\\app\\components\\product-list\\product-list.component.ts"],"sourcesContent":["<div class=\"main-content\">\n    <div class=\"section-content section-content-p30\">\n        <div class=\"container-fluid\">\n            <div class=\"row\">\n                <!-- loop over the collection of products -->\n                <div *ngFor=\"let tempProduct of products\" class=\"col-md-3\">\n\n                    <div class=\"product-box\">\n                        <img src=\"{{ tempProduct.imageUrl }}\" class=\"img-responsive\" alt=\"{{ tempProduct.name }}\">\n                        <h1>{{ tempProduct.name }}</h1>\n                        <div class=\"price\">{{ tempProduct.unitPrice }}</div>\n                        <a href=\"#\" class=\"primary-btn\">Add to cart</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Product } from 'src/app/common/product';\nimport { ProductService } from 'src/app/services/product.service';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list-grid.component.html',\n  // templateUrl: './product-list-table.component.html',\n  // templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit{\n\n    products: Product[] = [];\n    currentCategoryId: number=1;\n    searchMode: boolean = false;\n\n    constructor(private productService: ProductService, \n                private route: ActivatedRoute) {}\n\n    ngOnInit() {\n      this.route.paramMap.subscribe(() => {\n          this.listProducts();\n      });  \n        \n    }\n    listProducts() {\n      this.searchMode = this.route.snapshot.paramMap.has('keyword')!;\n\n      if (this.searchMode) {\n        this.handleSearchProducts() ;\n      }\n      else {\n        this.handleListProducts();\n      }\n    }\n  handleSearchProducts() {\n    const theKeyword: string = this.route.snapshot.paramMap.get('keyword');\n  }\n\n\n    handleListProducts() {\n      // check if \"id\" parameter is available\n      const hasCategoryId: boolean = this.route.snapshot.paramMap.has('id');\n\n      if (hasCategoryId) {\n        // get the 'id' parma string. convert string to a number using the \"+\" symbol\n        this.currentCategoryId = +this.route.snapshot.paramMap.get('id')!;\n      } else {\n          // not category id available ... default to category id 1\n          this.currentCategoryId = 1;\n      }\n      // get products for the given category id\n      this.productService.getProductList(this.currentCategoryId).subscribe(\n        data => {\n          this.products = data;\n        }\n      )\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}