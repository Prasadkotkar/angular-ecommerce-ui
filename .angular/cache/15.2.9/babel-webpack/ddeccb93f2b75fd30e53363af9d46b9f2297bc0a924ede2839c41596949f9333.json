{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ProductListComponent = class ProductListComponent {\n  constructor(productService, route) {\n    this.productService = productService;\n    this.route = route;\n    this.products = [];\n    this.currentCategoryId = 1;\n    this.searchMode = false;\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(() => {\n      this.listProducts();\n    });\n  }\n  listProducts() {\n    this.searchMode = this.route.snapshot.paramMap.has('keyword');\n    if (this.searchMode) {\n      this.handleSearchProducts();\n    } else {\n      this.handleListProducts();\n    }\n  }\n  handleSearchProducts() {\n    const theKeyword = this.route.snapshot.paramMap.get('keyword');\n    this.productService.searchProducts(theKeyword).subscribe(data => {\n      this.products = data;\n    });\n  }\n  handleListProducts() {\n    // check if \"id\" parameter is available\n    const hasCategoryId = this.route.snapshot.paramMap.has('id');\n    if (hasCategoryId) {\n      // get the 'id' parma string. convert string to a number using the \"+\" symbol\n      this.currentCategoryId = +this.route.snapshot.paramMap.get('id');\n    } else {\n      // not category id available ... default to category id 1\n      this.currentCategoryId = 1;\n    }\n    // get products for the given category id\n    this.productService.getProductList(this.currentCategoryId).subscribe(data => {\n      this.products = data;\n    });\n  }\n};\nProductListComponent = __decorate([Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list-grid.component.html',\n  // templateUrl: './product-list-table.component.html',\n  // templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})], ProductListComponent);\nexport { ProductListComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAY1C,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAM7BC,YAAoBC,cAA8B,EAC9BC,KAAqB;IADrB,mBAAc,GAAdD,cAAc;IACd,UAAK,GAALC,KAAK;IALzB,aAAQ,GAAc,EAAE;IACxB,sBAAiB,GAAS,CAAC;IAC3B,eAAU,GAAY,KAAK;EAGiB;EAE5CC,QAAQ;IACN,IAAI,CAACD,KAAK,CAACE,QAAQ,CAACC,SAAS,CAAC,MAAK;MAC/B,IAAI,CAACC,YAAY,EAAE;IACvB,CAAC,CAAC;EAEJ;EACAA,YAAY;IACV,IAAI,CAACC,UAAU,GAAG,IAAI,CAACL,KAAK,CAACM,QAAQ,CAACJ,QAAQ,CAACK,GAAG,CAAC,SAAS,CAAC;IAE7D,IAAI,IAAI,CAACF,UAAU,EAAE;MACnB,IAAI,CAACG,oBAAoB,EAAE;KAC5B,MACI;MACH,IAAI,CAACC,kBAAkB,EAAE;;EAE7B;EACFD,oBAAoB;IAClB,MAAME,UAAU,GAAW,IAAI,CAACV,KAAK,CAACM,QAAQ,CAACJ,QAAQ,CAACS,GAAG,CAAC,SAAS,CAAE;IAEvE,IAAI,CAACZ,cAAc,CAACa,cAAc,CAACF,UAAU,CAAC,CAACP,SAAS,CACtDU,IAAI,IAAG;MACL,IAAI,CAACC,QAAQ,GAAGD,IAAI;IACtB,CAAC,CACF;EACH;EAGEJ,kBAAkB;IAChB;IACA,MAAMM,aAAa,GAAY,IAAI,CAACf,KAAK,CAACM,QAAQ,CAACJ,QAAQ,CAACK,GAAG,CAAC,IAAI,CAAC;IAErE,IAAIQ,aAAa,EAAE;MACjB;MACA,IAAI,CAACC,iBAAiB,GAAG,CAAC,IAAI,CAAChB,KAAK,CAACM,QAAQ,CAACJ,QAAQ,CAACS,GAAG,CAAC,IAAI,CAAE;KAClE,MAAM;MACH;MACA,IAAI,CAACK,iBAAiB,GAAG,CAAC;;IAE9B;IACA,IAAI,CAACjB,cAAc,CAACkB,cAAc,CAAC,IAAI,CAACD,iBAAiB,CAAC,CAACb,SAAS,CAClEU,IAAI,IAAG;MACL,IAAI,CAACC,QAAQ,GAAGD,IAAI;IACtB,CAAC,CACF;EACH;CACH;AAtDYhB,oBAAoB,eAPhCD,SAAS,CAAC;EACTsB,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,oCAAoC;EACjD;EACA;EACAC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACWvB,oBAAoB,CAsDhC;SAtDYA,oBAAoB","names":["Component","ProductListComponent","constructor","productService","route","ngOnInit","paramMap","subscribe","listProducts","searchMode","snapshot","has","handleSearchProducts","handleListProducts","theKeyword","get","searchProducts","data","products","hasCategoryId","currentCategoryId","getProductList","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Project\\fullstack-angular-and-springboot\\Project files\\03-frontend\\angular-ecommerce-ui\\src\\app\\components\\product-list\\product-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Product } from 'src/app/common/product';\nimport { ProductService } from 'src/app/services/product.service';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list-grid.component.html',\n  // templateUrl: './product-list-table.component.html',\n  // templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit{\n\n    products: Product[] = [];\n    currentCategoryId: number=1;\n    searchMode: boolean = false;\n\n    constructor(private productService: ProductService, \n                private route: ActivatedRoute) {}\n\n    ngOnInit() {\n      this.route.paramMap.subscribe(() => {\n          this.listProducts();\n      });  \n        \n    }\n    listProducts() {\n      this.searchMode = this.route.snapshot.paramMap.has('keyword');\n\n      if (this.searchMode) {\n        this.handleSearchProducts() ;\n      }\n      else {\n        this.handleListProducts();\n      }\n    }\n  handleSearchProducts() {\n    const theKeyword: string = this.route.snapshot.paramMap.get('keyword')!;\n\n    this.productService.searchProducts(theKeyword).subscribe(\n      data => {\n        this.products = data;\n      }\n    )\n  }\n\n\n    handleListProducts() {\n      // check if \"id\" parameter is available\n      const hasCategoryId: boolean = this.route.snapshot.paramMap.has('id');\n\n      if (hasCategoryId) {\n        // get the 'id' parma string. convert string to a number using the \"+\" symbol\n        this.currentCategoryId = +this.route.snapshot.paramMap.get('id')!;\n      } else {\n          // not category id available ... default to category id 1\n          this.currentCategoryId = 1;\n      }\n      // get products for the given category id\n      this.productService.getProductList(this.currentCategoryId).subscribe(\n        data => {\n          this.products = data;\n        }\n      )\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}